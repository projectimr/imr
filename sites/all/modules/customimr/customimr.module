<?php

/**
 * @file
 *
 * The module that allows the site to manage all the custom functionality like
 * Registration form customization, IMR # Generation, Patietnts, Corp & Doctor
 * Informtion Management, 
 *
*/



/**
* NEED TO DELETE THIS HOOK
*/
function customimr_init(){
  global $user;
  if($user->uid != 0 && $user->uid != 1){
    drupal_set_message("Your IMR Number is ".$user->data['imr_no']);
  } 

  //print_r($user);

}


/**
 *
 * Implements hook_form_alter to add the profile type field while adding a field
 *
*/
function customimr_form_alter(&$form, &$form_state, $form_id){
  //print_r($form_id);
  switch($form_id){
    
    case "profile_field_form":
      _add_profile_type_field($form);
    break;

    case "user_register_form":
      $prof_type = arg(2);
      $profile_name_field_array = array();
      $result = _profile_get_fields($form['#user_category'], $form['#user_category'] == 'register');
      $profile_names = _get_profile_types_field(NULL, $prof_type);
      foreach($profile_names as $profile_name_field){
        $profile_name_field_array[] = $profile_name_field->fid;
      }//print_r($profile_name_field_array);
      foreach($result as $key => $field){//echo '<pre>-------------'.$key;
        if(empty($prof_type)){
          if(in_array($field->name, $profile_name_field_array)){
            unset($form[$field->category][$field->name]); 
          }
        }else{
          if(!in_array($field->name, $profile_name_field_array)){
            unset($form[$field->category][$field->name]);
          }          
        }//echo 'hai<pre>';print_r($form);echo '</pre>';exit;
      }//exit;
      foreach($form as $catkey => $val){
        //echo '<pre>';print_r($val);echo '</pre>';
      }
      
    
    break;

  }  
}




/**
 * Add the Profile Type field to the profile field form
 *
 *
*/
function  _add_profile_type_field(&$form){
  //if(arg(4) ==)
//echo '<pre>';print_r($form);echo '</pre>';
  $profile_type_val = array();
  if(isset($form['fid']['#value'])){
    $profile_type = _get_profile_types_field($form['fid']['#value']);
    foreach($profile_type as $val){
      $profile_type_val[$val->tid] = $val->tname;
    }
  }

  $form["profile_type"] = array(
    '#type' => 'textfield',
    '#title' => 'Profile Type',
    '#default_value' => implode(',', $profile_type_val),
    '#autocomplete_path' => 'admin/config/people/profile-type/autocomplete',
    '#description' => 'Type in the Profile type. For multiple profile name, type as comma seperated value',
    //'#required' => 1,
  );

  $form['#submit']['1'] = 'profile_type_form_submit';
   
}
 

/**
 *
 * Implementation of hook_menu()
 *
*/
function customimr_menu(){

  $items['admin/config/people/profile-type/autocomplete'] = array(
    'title' => 'Profile Type autocomplete',
    'page callback' => 'profile_type_admin_settings_autocomplete',
    'access arguments' => array('administer users'),
    'file' => 'customimr.admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;

}


function profile_type_form_submit($form, &$form_state){
  
  // Remove all elements that are not profile_type columns.
  
  $values = array_intersect_key($form_state['values'], array_flip(array('profile_type', 'name')));
  $insertVal = explode(',', $values['profile_type']);
  $profile_type_values = profile_type_save($insertVal);
 
  profile_field_type_save($values['name'], $profile_type_values);
}


function profile_field_type_save($profile_name, $profile_type_values){
  $profile_type_fields = _get_profile_types_field($profile_name)->fetchAssoc();
  
  $deleted = db_delete('profile_type_field')
		->condition('fid', $profile_name)
  		->execute();
     
  foreach($profile_type_values as $key => $val){
    $profile_data = array(
      "tid" => $key,
      "tname" => $val,
      "fid" => $profile_name
    );
    drupal_write_record('profile_type_field', $profile_data); 
  }
  //echo 'hai';print_r($profile_type_fields);exit;  
}


function profile_type_save($values){
  $returnArray = array();
  if(is_array($values)){
    foreach($values as $val){//echo $val.'<br />';
      $profileVal = _profile_type_get_fields($val)->fetchAssoc();
      if(empty($profileVal)){
        $data = array('profile_type' => $val, 'status' => 'A');
        $returnData = drupal_write_record('profile_type', $data); //NEED TODO EXCEPTION HANDLING LATER. DO REVISIONS TOO
        $returnArray[$data['tid']] = $data['profile_type'];
      }else{
        $returnArray[$profileVal['tid']] = $profileVal['profile_type'];
      }
    }
  }
  return $returnArray;
}

function _profile_type_get_fields($val=NULL){
  $query = db_select('profile_type', 'pt');
  if (is_numeric($val)) {
    $query->condition('tid', $val);
  }
  else if (!empty($val)){
    $query->condition('profile_type', $val);
  }else{
    return;
  }
  return $query->fields('pt', array('tid','profile_type'))->orderBy('profile_type', 'ASC')->execute();
}


function _get_profile_types_field($fid=NULL, $tname=NULL){
  //echo 'fid = '.$fid;
  $flag = 0;
  $query = db_select("profile_type_field", "ptf");
  if(!empty($fid)){
    if(is_numeric($fid)){
      $flag = 1; //NEED TO DELETE THIS
      $edit = db_query('SELECT * FROM {profile_field} WHERE fid = :fid', array('fid' => $fid))->fetchAssoc();
      $fid = $edit['name'];
    }
    
    $query->condition('fid', $fid);
  }else{
    //return;
  }

  if(!empty($tname)){
    $query->condition('tname', $tname);
  }
  return $query->fields('ptf', array('tfid','tname','tid','fid'))->orderBy('tid', 'ASC')->execute();
}


/**
 *
 * Implementation of hook_user_presave
 *
*/
function customimr_user_presave(&$edit, $account, $category) {
  $arg = arg(2);
  if(arg(2) != 'edit'){
    if(isset($edit['profile_business_type'])){
	$business_cat = $edit['profile_business_type'];
    }
   $imr_frst = ($arg == 'hospital-business')?$business_cat{0}:'I';
  $gender = isset($edit['profile_gender'])?$edit['profile_gender']:'';
  $zone_ind = $edit['profile_province_region'];
  $stat_id = $edit['profile_state'];
  $dis_flag = ($edit['profile_physical_challenge'] == 1)?'D':'';
  $random_no = rand(1,99999);//crc32($edit['name']);

  $imr_no = $imr_frst.ucwords($gender{0}).ucwords($zone_ind{0}).ucwords($stat_id{0}).ucwords($stat_id{1}).$dis_flag.$random_no;
  $edit['data']['imr_no'] = $imr_no;
  drupal_set_message('Your IMR Number is '.$imr_no);
 } 
}


/**
 *
 *
*/
#function customimr_user_presave((&$edit, $account, $category)
#{
#  
#} 
